###

Instal Docker 


yum install docker 

# check Docker installed 


[root@server ~]# rpm -qa | grep docker
docker-25.0.6-1.amzn2.0.2.x86_64

# check version of docker 
[root@server ~]# docker version
Client:
 Version:           25.0.5
 API version:       1.44
 Go version:        go1.22.5
 Git commit:        5dc9bcc
 Built:             Thu Aug 22 17:25:26 2024
 OS/Arch:           linux/amd64
 Context:           default
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?


# Start docker 

[root@server ~]# systemctl start docker


# Check status of docekr 

[root@server ~]# systemctl status docker
● docker.service - Docker Application Container Engine
   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)
   Active: active (running) since Thu 2024-12-19 02:12:42 UTC; 54s ago
     Docs: https://docs.docker.com
  Process: 10942 ExecStartPre=/usr/libexec/docker/docker-setup-runtimes.sh (code=exited, status=0/SUCCESS)


# Enable docker 

[root@server ~]# systemctl enable docker
Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.

# Docker version 

[root@server ~]# docker version
Client:
 Version:           25.0.5
 API version:       1.44
 Go version:        go1.22.5
 Git commit:        5dc9bcc
 Built:             Thu Aug 22 17:25:26 2024
 OS/Arch:           linux/amd64
 Context:           default

Server:
 Engine:
  Version:          25.0.6
  API version:      1.44 (minimum version 1.24)
  Go version:       go1.22.5
  Git commit:       b08a51f
  Built:            Thu Aug 22 17:26:01 2024
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.7.23
  GitCommit:        57f17b0a6295a39009d861b89e3b3b87b005ca27
 runc:
  Version:          1.1.14
  GitCommit:        2c9f5602f0ba3d9da1c2596322dfc4e156844890
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0
[root@server ~]#

# Docker info 

[root@server ~]# docker info
Client:
 Version:    25.0.5
 Context:    default
 Debug Mode: false
 Plugins:
  buildx: Docker Buildx (Docker Inc.)
    Version:  v0.0.0+unknown
    Path:     /usr/libexec/docker/cli-plugins/docker-buildx

Server:
 Containers: 0
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 0
 Server Version: 25.0.6
 Storage Driver: overlay2
  Backing Filesystem: xfs
  Supports d_type: true
  Using metacopy: false
  Native Overlay Diff: true
  userxattr: false
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Cgroup Version: 1
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local splunk syslog
 Swarm: inactive
 Runtimes: io.containerd.runc.v2 runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: 57f17b0a6295a39009d861b89e3b3b87b005ca27
 runc version: 2c9f5602f0ba3d9da1c2596322dfc4e156844890
 init version: de40ad0
 Security Options:
  seccomp
   Profile: builtin
 Kernel Version: 5.10.228-219.884.amzn2.x86_64
 Operating System: Amazon Linux 2
 OSType: linux
 Architecture: x86_64
 CPUs: 1
 Total Memory: 952.7MiB
 Name: server
 ID: bd921205-72f0-480b-af9b-1e31685645e2
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false

[root@server ~]#


# List docker images 

[root@server ~]# docker image ls
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
[root@server ~]#


# list docker contianer

[root@server ~]# docker container ls
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@server ~]#


# Run a test image 

[root@server ~]# docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
c1ec31eb5944: Pull complete
Digest: sha256:5b3cc85e16e3058003c13b7821318369dad01dac3dbb877aac3c28182255c724
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/


# 
[root@server ~]# docker image ls
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
hello-world   latest    d2c94e258dcb   19 months ago   13.3kB
[root@server ~]# docker container ls
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@server ~]#

# List all containers 

[root@server ~]# docker container ls -a
CONTAINER ID   IMAGE         COMMAND    CREATED         STATUS                     PORTS     NAMES
9710b31daf25   hello-world   "/hello"   8 minutes ago   Exited (0) 8 minutes ago             nice_aryabhata
[root@server ~]#

# Pull a docker image 

[root@server ~]# docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
de44b265507a: Pull complete
Digest: sha256:80dd3c3b9c6cecb9f1667e9290b3bc61b78c2678c02cbdae5f0fea92cc6734ab
Status: Downloaded newer image for ubuntu:latest
docker.io/library/ubuntu:latest
[root@server ~]# docker image ls
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
ubuntu        latest    b1d9df8ab815   4 weeks ago     78.1MB
hello-world   latest    d2c94e258dcb   19 months ago   13.3kB
[root@server ~]#
###
Working with stopped containers 
[root@server ~]# docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
ubuntu        latest    b1d9df8ab815   4 weeks ago     78.1MB
hello-world   latest    d2c94e258dcb   20 months ago   13.3kB
[root@server ~]#
[root@server ~]# docker ps  -a
CONTAINER ID   IMAGE         COMMAND       CREATED      STATUS                    PORTS     NAMES
a38ec594be8f   ubuntu        "/bin/bash"   3 days ago   Exited (137) 2 days ago             ubuntu
9710b31daf25   hello-world   "/hello"      4 days ago   Exited (0) 4 days ago               nice_aryabhata
[root@server ~]#

[root@server ~]# docker run -it --name ubuntu ubuntu
docker: Error response from daemon: Conflict. The container name "/ubuntu" is already in use by container "a38ec594be8f2b062ab77a136b04dfbe541455bbb57b150c08b95cbca163d8ca". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.
[root@server ~]#
  

[root@server ~]# docker run -it --name mycontainer  ubuntu
root@1cc3158836af:/#
# Install apache server
>   apt-get update
>   apt-get install -y apache2 curl net-tools
>   service apache2 status
>   echo 'Hello World' > /var/www/html/index.html
>   service apache2 start
>   netstat -plnt
>   curl localhost
>   ifconfig
>   curl 172.17.0.2
>   exit



[root@server ~]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@server ~]# docker ps  -a
CONTAINER ID   IMAGE         COMMAND       CREATED         STATUS                     PORTS     NAMES
1cc3158836af   ubuntu        "/bin/bash"   4 minutes ago   Exited (0) 6 seconds ago             mycontainer
a38ec594be8f   ubuntu        "/bin/bash"   3 days ago      Exited (137) 2 days ago              ubuntu
9710b31daf25   hello-world   "/hello"      4 days ago      Exited (0) 4 days ago                nice_aryabhata
[root@server ~]#


[root@server ~]# docker start mycontainer
mycontainer
[root@server ~]#
[root@server ~]# docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS          PORTS     NAMES
1cc3158836af   ubuntu    "/bin/bash"   4 minutes ago   Up 12 seconds             mycontainer
[root@server ~]#



[root@server ~]# docker inspect mycontainer
[
    {
        "Id": "1cc3158836afa12b23e82fe2cd003a108e935ec91cb04e4f708c19833e07890f",
        "Created": "2024-12-23T01:59:18.673065435Z",
        "Path": "/bin/bash",
        "Args": [],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 11691,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2024-12-23T02:04:02.461226325Z",
            "FinishedAt": "2024-12-23T02:03:35.988898881Z"
        },
        "Image": "sha256:b1d9df8ab81559494794e522b380878cf9ba82d4c1fb67293bcf931c3aa69ae4",
        "ResolvConfPath": "/var/lib/docker/containers/1cc3158836afa12b23e82fe2cd003a108e935ec91cb04e4f708c19833e07890f/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/1cc3158836afa12b23e82fe2cd003a108e935ec91cb04e4f708c19833e07890f/hostname",
        "HostsPath": "/var/lib/docker/containers/1cc3158836afa12b23e82fe2cd003a108e935ec91cb04e4f708c19833e07890f/hosts",
        "LogPath": "/var/lib/docker/containers/1cc3158836afa12b23e82fe2cd003a108e935ec91cb04e4f708c19833e07890f/1cc3158836afa12b23e82fe2cd003a108e935ec91cb04e4f708c19833e07890f-json.log",
        "Name": "/mycontainer",
        "RestartCount": 0,
        "Driver": "overlay2",
        "Platform": "linux",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "ConsoleSize": [
                15,
                62
            ],
            "CapAdd": null,
            "CapDrop": null,
            "CgroupnsMode": "host",
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "private",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": [],
            "BlkioDeviceReadBps": [],
            "BlkioDeviceWriteBps": [],
            "BlkioDeviceReadIOps": [],
            "BlkioDeviceWriteIOps": [],
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DeviceCgroupRules": null,
            "DeviceRequests": null,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": null,
            "OomKillDisable": false,
            "PidsLimit": null,
            "Ulimits": [
                {
                    "Name": "nofile",
                    "Hard": 65536,
                    "Soft": 32768
                }
            ],
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0,
            "MaskedPaths": [
                "/proc/asound",
                "/proc/acpi",
                "/proc/kcore",
                "/proc/keys",
                "/proc/latency_stats",
                "/proc/timer_list",
                "/proc/timer_stats",
                "/proc/sched_debug",
                "/proc/scsi",
                "/sys/firmware",
                "/sys/devices/virtual/powercap"
            ],
            "ReadonlyPaths": [
                "/proc/bus",
                "/proc/fs",
                "/proc/irq",
                "/proc/sys",
                "/proc/sysrq-trigger"
            ]
        },
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/2b7661596752b048586098bc21a5decbe3635f945bd71630b9d5b0f193016f16-init/diff:/var/lib/docker/overlay2/00be301a05f09bd7b98d82661580afd6cc4f94e8afa3be7261f7a433b4ad1218/diff",
                "MergedDir": "/var/lib/docker/overlay2/2b7661596752b048586098bc21a5decbe3635f945bd71630b9d5b0f193016f16/merged",
                "UpperDir": "/var/lib/docker/overlay2/2b7661596752b048586098bc21a5decbe3635f945bd71630b9d5b0f193016f16/diff",
                "WorkDir": "/var/lib/docker/overlay2/2b7661596752b048586098bc21a5decbe3635f945bd71630b9d5b0f193016f16/work"
            },
            "Name": "overlay2"
        },
        "Mounts": [],
        "Config": {
            "Hostname": "1cc3158836af",
            "Domainname": "",
            "User": "",
            "AttachStdin": true,
            "AttachStdout": true,
            "AttachStderr": true,
            "Tty": true,
            "OpenStdin": true,
            "StdinOnce": true,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/bash"
            ],
            "Image": "ubuntu",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.version": "24.04"
            }
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "4fe1872f6cd0dfbff73b4155f58bf7bbff7d869b00f6ead66ee18f09095e0e9e",
            "SandboxKey": "/var/run/docker/netns/4fe1872f6cd0",
            "Ports": {},
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "4c0cc96c629544f4e129ece7ed8d4167a13cf107aabd06906b35b02638c447f7",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:02",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "02:42:ac:11:00:02",
                    "NetworkID": "badc750223a595670f8837df0c605bf0fcd7bccccf5495d0ba4e55c7d9fc7121",
                    "EndpointID": "4c0cc96c629544f4e129ece7ed8d4167a13cf107aabd06906b35b02638c447f7",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                }
            }
        }
    }
]

####
#
# Too much info.? Filter your outputs
docker inspect ubuntu -f '{{.NetworkSettings.IPAddress}}'
docker inspect ubuntu -f '{{json .NetworkSettings.Networks}}'

# Attach to container and check if apache is running. If not, start it.
docker attach ubuntu
service apache2 status
service apache2 start
# If exited now, the container will be stopped and even if started back, apache process won't auto-start
# Instead of exit, just detach the container
PRESS Ctrl-P and Ctrl-Q one after another

#####
[root@server ~]# docker attach mycontainer
root@1cc3158836af:/#
root@1cc3158836af:/#
root@1cc3158836af:/# service apache2 status
 * apache2 is not running
root@1cc3158836af:/# service apache2 start
 * Starting Apache httpd web server apache2                  AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message
 *
root@1cc3158836af:/#

 *
root@1cc3158836af:/# read escape sequence

[root@server ~]# curl 172.17.0.2
Hello World

[root@server ~]# curl localhost
curl: (7) Failed to connect to localhost port 80 after 0 ms: Couldn't connect to server

# Save container as a new image (Created image with entrypoint to start apache server automatically)
docker commit -c "ENTRYPOINT apachectl -D FOREGROUND" ubuntu myapache



[root@server ~]# docker commit -c "ENTRYPOINT apachectl -D FOREGROUND" mycontainer  myapache
sha256:66199e29306b6ab5979cfd5f9d8834ced5578fda4787130cb083e724c8ecdb5c
[root@server ~]# docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
myapache      latest    66199e29306b   9 seconds ago   230MB
ubuntu        latest    b1d9df8ab815   4 weeks ago     78.1MB
hello-world   latest    d2c94e258dcb   20 months ago   13.3kB
[root@server ~]#


[root@server ~]# docker run -itd --name apache1 myapache
834b680784d7f329ebe198d49de2e874f2e5af4756b2768f50903272529c38d9


[root@server ~]# docker ps
CONTAINER ID   IMAGE      COMMAND                  CREATED          STATUS          PORTS     NAMES
834b680784d7   myapache   "/bin/sh -c 'apachec…"   11 seconds ago   Up 10 seconds             apache1
1cc3158836af   ubuntu     "/bin/bash"              22 minutes ago   Up 17 minutes             mycontainer
[root@server ~]# docker inspect 834b680784d7
[
    {
        "Id": "834b680784d7f329ebe198d49de2e874f2e5af4756b2768f50903272529c38d9",
        "Created": "2024-12-23T02:21:30.461577085Z",
        "Path": "/bin/sh",
        "Args": [
            "-c",
            "apachectl -D FOREGROUND"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 18241,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2024-12-23T02:21:30.798577441Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:66199e29306b6ab5979cfd5f9d8834ced5578fda4787130cb083e724c8ecdb5c",
        "ResolvConfPath": "/var/lib/docker/containers/834b680784d7f329ebe198d49de2e874f2e5af4756b2768f50903272529c38d9/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/834b680784d7f329ebe198d49de2e874f2e5af4756b2768f50903272529c38d9/hostname",
        "HostsPath": "/var/lib/docker/containers/834b680784d7f329ebe198d49de2e874f2e5af4756b2768f50903272529c38d9/hosts",
        "LogPath": "/var/lib/docker/containers/834b680784d7f329ebe198d49de2e874f2e5af4756b2768f50903272529c38d9/834b680784d7f329ebe198d49de2e874f2e5af4756b2768f50903272529c38d9-json.log",
        "Name": "/apache1",
        "RestartCount": 0,
        "Driver": "overlay2",
        "Platform": "linux",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "ConsoleSize": [
                13,
                61
            ],
            "CapAdd": null,
            "CapDrop": null,
            "CgroupnsMode": "host",
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "private",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": [],
            "BlkioDeviceReadBps": [],
            "BlkioDeviceWriteBps": [],
            "BlkioDeviceReadIOps": [],
            "BlkioDeviceWriteIOps": [],
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DeviceCgroupRules": null,
            "DeviceRequests": null,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": null,
            "OomKillDisable": false,
            "PidsLimit": null,
            "Ulimits": [
                {
                    "Name": "nofile",
                    "Hard": 65536,
                    "Soft": 32768
                }
            ],
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0,
            "MaskedPaths": [
                "/proc/asound",
                "/proc/acpi",
                "/proc/kcore",
                "/proc/keys",
                "/proc/latency_stats",
                "/proc/timer_list",
                "/proc/timer_stats",
                "/proc/sched_debug",
                "/proc/scsi",
                "/sys/firmware",
                "/sys/devices/virtual/powercap"
            ],
            "ReadonlyPaths": [
                "/proc/bus",
                "/proc/fs",
                "/proc/irq",
                "/proc/sys",
                "/proc/sysrq-trigger"
            ]
        },
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/d1f770a870ea7a2bef1df5ec2e9adc1ad6988d3bf927978cc10a7e4e48eb07bc-init/diff:/var/lib/docker/overlay2/d2b52660db2336680bcc128236e4c8bcbb780bc9ca3876610911969008ee258c/diff:/var/lib/docker/overlay2/00be301a05f09bd7b98d82661580afd6cc4f94e8afa3be7261f7a433b4ad1218/diff",
                "MergedDir": "/var/lib/docker/overlay2/d1f770a870ea7a2bef1df5ec2e9adc1ad6988d3bf927978cc10a7e4e48eb07bc/merged",
                "UpperDir": "/var/lib/docker/overlay2/d1f770a870ea7a2bef1df5ec2e9adc1ad6988d3bf927978cc10a7e4e48eb07bc/diff",
                "WorkDir": "/var/lib/docker/overlay2/d1f770a870ea7a2bef1df5ec2e9adc1ad6988d3bf927978cc10a7e4e48eb07bc/work"
            },
            "Name": "overlay2"
        },
        "Mounts": [],
        "Config": {
            "Hostname": "834b680784d7",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": true,
            "OpenStdin": true,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": null,
            "Image": "myapache",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": [
                "/bin/sh",
                "-c",
                "apachectl -D FOREGROUND"
            ],
            "OnBuild": null,
            "Labels": {
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.version": "24.04"
            }
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "540312f49126cde2a8646f37ea829f82ec61712bb8381e1effc92f9b326198a6",
            "SandboxKey": "/var/run/docker/netns/540312f49126",
            "Ports": {},
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "83eb9be36680bd9fdfd6b1782acd2a2f3487141a0ecfbbe63d0698312fe5aa6c",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.3",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:03",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "02:42:ac:11:00:03",
                    "NetworkID": "badc750223a595670f8837df0c605bf0fcd7bccccf5495d0ba4e55c7d9fc7121",
                    "EndpointID": "83eb9be36680bd9fdfd6b1782acd2a2f3487141a0ecfbbe63d0698312fe5aa6c",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.3",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                }
            }
        }
    }
]
[root@server ~]# curl 172.17.0.3
Hello World

## 
#Port Binding
#
 [root@server ~]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@server ~]# docker image ls
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
myapache      latest    66199e29306b   24 hours ago    230MB
ubuntu        latest    b1d9df8ab815   4 weeks ago     78.1MB
hello-world   latest    d2c94e258dcb   20 months ago   13.3kB
[root@server ~]#


[root@server ~]# docker run -itd --name apache1 myapache
fe8d8d8e0c2595f8e3b8cfb0e60ce470b95614ef93678fb71d428eb146247fe5
[root@server ~]#
[root@server ~]# docker ps
CONTAINER ID   IMAGE      COMMAND                  CREATED         STATUS         PORTS     NAMES
fe8d8d8e0c25   myapache   "/bin/sh -c 'apachec…"   4 seconds ago   Up 3 seconds             apache1
[root@server ~]# curl 172.17.0.2
Hello World

# Open the public IP of your docker host in a web browser

# Can same host port be bound with multiple container? Not in this world

[root@server ~]# docker run -itd --name apache2a -p 80:80 myapache
71fd5289b4372c2acb6b0c3e19926a1091bf18b2c464ce4cc2e42c25f3b41e01
[root@server ~]# docker ps
CONTAINER ID   IMAGE      COMMAND                  CREATED         STATUS         PORTS                               NAMES
71fd5289b437   myapache   "/bin/sh -c 'apachec…"   4 seconds ago   Up 3 seconds   0.0.0.0:80->80/tcp, :::80->80/tcp   apache2a
fe8d8d8e0c25   myapache   "/bin/sh -c 'apachec…"   3 minutes ago   Up 2 minutes                                       apache1
[root@server ~]#

# Out of curiosity, What happens if host port is not given? Try it out!
docker run -itd --name apache3 -p 80 myapache

20556af718d872b1e17277b2a38f1f4942267324d88f6c4daa2d3dc25bb54a7d
[root@server ~]# docker ps
CONTAINER ID   IMAGE      COMMAND                  CREATED          STATUS          PORTS                                     NAMES
20556af718d8   myapache   "/bin/sh -c 'apachec…"   19 seconds ago   Up 18 seconds   0.0.0.0:32768->80/tcp, :::32768->80/tcp   apache3
71fd5289b437   myapache   "/bin/sh -c 'apachec…"   3 minutes ago    Up 3 minutes    0.0.0.0:80->80/tcp, :::80->80/tcp         apache2a
fe8d8d8e0c25   myapache   "/bin/sh -c 'apachec…"   6 minutes ago    Up 6 minutes                                              apache1

[root@server ~]# docker run -itd --name apache4 -p 8080:80 -p 8081:80 myapache
5a29de86fac037a9f1f7ecf0bc432fa665944f2adeba42a5cdc3b8aaf821a3d1
[root@server ~]#

[root@server ~]# docker ps
CONTAINER ID   IMAGE      COMMAND                  CREATED              STATUS              PORTS                                                                          NAMES
5a29de86fac0   myapache   "/bin/sh -c 'apachec…"   25 seconds ago       Up 24 seconds       0.0.0.0:8080->80/tcp, 0.0.0.0:8081->80/tcp, :::8080->80/tcp, :::8081->80/tcp   apache4
20556af718d8   myapache   "/bin/sh -c 'apachec…"   About a minute ago   Up About a minute   0.0.0.0:32768->80/tcp, :::32768->80/tcp                                        apache3
71fd5289b437   myapache   "/bin/sh -c 'apachec…"   4 minutes ago        Up 4 minutes        0.0.0.0:80->80/tcp, :::80->80/tcp                                              apache2a
fe8d8d8e0c25   myapache   "/bin/sh -c 'apachec…"   7 minutes ago        Up 7 minutes                                                                                       apache1
[root@server ~]#

[root@server ~]# docker port apache4
80/tcp -> 0.0.0.0:8080
80/tcp -> 0.0.0.0:8081
80/tcp -> [::]:8080
80/tcp -> [::]:8081


###
Docker exec 

# Start a new container with port binding
docker run -itd --name apache2 -p 80:80 myapache


# Check container's status (Notice difference between old and new container's PORTS column)
docker container ls -a

# Attach to your new container to check logs
docker attach apache2

# Not working? check container status
docker container ls -a

# Start the container again and use docker logs
docker container start apache2
docker logs apache2


# Uh-oh! Only the stdout of apache server is shown. We need to enter into the container to get the access logs and There's a way.
docker exec -it apache2 /bin/bash
>   cat /var/log/apache2/access.log
>   exit

# Simple commands are also possible
docker exec -it apache2 tail -f /var/log/apache2/access.log

# Want even more simple? Run this
docker exec -it apache2 netstat -plnt

# Delete the new container
docker container rm apache2

# Denied? Do it forcefully.
docker container rm -f apache2

# Check container status
docker container ls -a

# Force kill the old apache container
docker container kill apache1

# Check container status again
docker container ls -a

# Too tired to remove all containers? There's a bash shortcut
# WARNING: This removes all containers. Don't worry, your image is still there.
docker container rm -f $(docker container ls -aq)
